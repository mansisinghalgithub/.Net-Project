// <auto-generated />
using System;
using EnterpriseHub_1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnterpriseHub_1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240709194217_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("DeptNo")
                        .HasColumnType("int")
                        .HasColumnName("DeptNo");

                    b.Property<string>("DeptHead")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DeptHead");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DeptName");

                    b.HasKey("DeptNo");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int")
                        .HasColumnName("EmpNo");

                    b.Property<decimal>("Basic")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Basic");

                    b.Property<int>("DeptNo")
                        .HasColumnType("int")
                        .HasColumnName("DeptNo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("PosNo")
                        .HasColumnType("int")
                        .HasColumnName("PosNo");

                    b.Property<int>("ProjNo")
                        .HasColumnType("int")
                        .HasColumnName("ProjNo");

                    b.HasKey("EmpNo");

                    b.HasIndex("DeptNo");

                    b.HasIndex("PosNo");

                    b.HasIndex("ProjNo");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Position", b =>
                {
                    b.Property<int>("PosNo")
                        .HasColumnType("int")
                        .HasColumnName("PosNo");

                    b.Property<decimal>("MaxSalary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MaxSalary");

                    b.Property<decimal>("MinSalary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MinSalary");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("PosNo");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Property<int>("ProjNo")
                        .HasColumnType("int")
                        .HasColumnName("ProjNo");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("EndDate");

                    b.Property<string>("ProjName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ProjName");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("StartDate");

                    b.HasKey("ProjNo");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Department", "DeptNoNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("DeptNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Position", "PosNoNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("PosNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project", "ProjNoNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("ProjNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeptNoNavigation");

                    b.Navigation("PosNoNavigation");

                    b.Navigation("ProjNoNavigation");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
